#include <cfg/cs_AutoConfig.h>

#include <cfg/cs_Boards.h>

#define CS_FIRMWARE_VERSION "@FIRMWARE_VERSION@"
const char g_FIRMWARE_VERSION[] = CS_FIRMWARE_VERSION;

#define CS_COMPILATION_DAY "@COMPILATION_DAY@"
const char g_COMPILATION_DAY[] = CS_COMPILATION_DAY;

#define CS_BUILD_TYPE "@CMAKE_BUILD_TYPE@"
const char g_BUILD_TYPE[] = CS_BUILD_TYPE;

#define CS_BEACON_UUID "@BEACON_UUID@"
const char g_BEACON_UUID[] = CS_BEACON_UUID;

const uint16_t g_BEACON_MAJOR = @BEACON_MAJOR@;

const uint16_t g_BEACON_MINOR = @BEACON_MINOR@;

const int8_t g_BEACON_RSSI = @BEACON_RSSI@;

uint32_t g_APPLICATION_START_ADDRESS = @APPLICATION_START_ADDRESS@;

uint32_t g_APPLICATION_LENGTH = @APPLICATION_LENGTH@;

uint32_t g_RAM_R1_BASE = @RAM_R1_BASE@;

uint32_t g_RAM_APPLICATION_AMOUNT = @RAM_APPLICATION_AMOUNT@;

// The address of where to write the hardware board type (it is a UICR register)
uint32_t g_HARDWARE_BOARD_ADDRESS = @HARDWARE_BOARD_ADDRESS@;

// The default hardware board
uint32_t g_DEFAULT_HARDWARE_BOARD = @DEFAULT_HARDWARE_BOARD@;

// Start of flash for microapps
uint32_t g_FLASH_MICROAPP_BASE = @FLASH_MICROAPP_BASE@;

// Number of pages
uint8_t g_FLASH_MICROAPP_PAGES = @FLASH_MICROAPP_PAGES@;

// Microapp ram is located before IPC ram.
uint32_t g_RAM_MICROAPP_BASE = @RAM_R1_BASE@ + @RAM_APPLICATION_AMOUNT@ - (@RAM_BLUENET_IPC_LENGTH@ + @RAM_MICROAPP_AMOUNT@);

uint32_t g_RAM_MICROAPP_AMOUNT = @RAM_MICROAPP_AMOUNT@;

int8_t g_MAX_CHIP_TEMPERATURE = @MAX_CHIP_TEMP@;

uint16_t g_BOOT_DELAY = @BOOT_DELAY@;

uint16_t g_SCAN_DURATION = @SCAN_DURATION@;

uint16_t g_SCAN_BREAK_DURATION = @SCAN_BREAK_DURATION@;

const int8_t g_TX_POWER = @TX_POWER@;

const uint32_t g_CONNECTION_ALIVE_TIMEOUT = @CONNECTION_ALIVE_TIMEOUT@;

const uint16_t g_MASTER_BUFFER_SIZE = @MASTER_BUFFER_SIZE@;

const bool g_CHANGE_NAME_ON_RESET = @CHANGE_NAME_ON_RESET@;

const bool g_CONFIG_ENCRYPTION_ENABLED_DEFAULT = @ENCRYPTION@;

const bool g_CONFIG_IBEACON_ENABLED_DEFAULT = @IBEACON@;

const bool g_CONFIG_MESH_ENABLED_DEFAULT = @MESHING@;

const bool g_CONFIG_SCANNER_ENABLED_DEFAULT = @SCANNER@;

const bool g_CONFIG_TAP_TO_TOGGLE_ENABLED_DEFAULT = @TAP_TO_TOGGLE@;

const bool g_CONFIG_SWITCHCRAFT_ENABLED_DEFAULT = @SWITCHCRAFT@;

const bool g_CONFIG_SWITCH_LOCK_ENABLED_DEFAULT = @SWITCH_LOCK@;

const bool g_CONFIG_START_DIMMER_ON_ZERO_CROSSING_DEFAULT = @START_DIMMER_ON_ZERO_CROSSING@;

const bool g_CONFIG_DIMMING_ALLOWED_DEFAULT = @DIMMING_ALLOWED@;

const int8_t g_CONFIG_TAP_TO_TOGGLE_RSSI_THRESHOLD_OFFSET_DEFAULT = @TAP_TO_TOGGLE_RSSI_OFFSET@;

const uint8_t g_CONFIG_SPHERE_ID_DEFAULT = @SPHERE_ID@;

const uint8_t g_CONFIG_CROWNSTONE_ID_DEFAULT = @CROWNSTONE_ID@;

const uint16_t g_CONFIG_RELAY_HIGH_DURATION_DEFAULT = @RELAY_HIGH_DURATION@;

const int8_t g_CONFIG_LOW_TX_POWER_DEFAULT = @LOW_TX_POWER@;

#define SERIAL_ENABLE_NONE                       0
#define SERIAL_ENABLE_RX_ONLY                    1
#define SERIAL_ENABLE_RX_AND_TX                  3

const uint8_t g_CS_SERIAL_ENABLED = @CS_SERIAL_ENABLED@;

const bool g_ENABLE_RSSI_FOR_CONNECTION = @ENABLE_RSSI_FOR_CONNECTION@;

const uint8_t g_TWI_SCL_INDEX = @TWI_SCL_INDEX@;

const uint8_t g_TWI_SDA_INDEX = @TWI_SDA_INDEX@;

const bool g_AUTO_ENABLE_MICROAPP_ON_BOOT = @AUTO_ENABLE_MICROAPP_ON_BOOT@;

const int8_t g_GPIO_PIN1_INDEX = @GPIO_PIN1_INDEX@;
const int8_t g_GPIO_PIN2_INDEX = @GPIO_PIN2_INDEX@;
const int8_t g_GPIO_PIN3_INDEX = @GPIO_PIN3_INDEX@;
const int8_t g_GPIO_PIN4_INDEX = @GPIO_PIN4_INDEX@;

const int8_t g_BUTTON1_INDEX = @BUTTON1_INDEX@;
const int8_t g_BUTTON2_INDEX = @BUTTON2_INDEX@;
const int8_t g_BUTTON3_INDEX = @BUTTON3_INDEX@;
const int8_t g_BUTTON4_INDEX = @BUTTON4_INDEX@;

const int8_t g_LED1_INDEX = @LED1_INDEX@;
const int8_t g_LED2_INDEX = @LED2_INDEX@;
const int8_t g_LED3_INDEX = @LED3_INDEX@;
const int8_t g_LED4_INDEX = @LED4_INDEX@;

